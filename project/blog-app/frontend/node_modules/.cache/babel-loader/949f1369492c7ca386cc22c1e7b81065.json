{"ast":null,"code":"var _jsxFileName = \"/home/aditya/SemiColon_selenium_tests/project/blog-app/frontend/src/components/pages/Blog/BlogRender.jsx\";\nimport React from \"react\";\nimport { Text, Code, Divider, Link, List, Checkbox, ListItem, Heading, Image } from \"@chakra-ui/core\";\n\nfunction getCoreProps(props) {\n  return props[\"data-sourcepos\"] ? {\n    \"data-sourcepos\": props[\"data-sourcepos\"]\n  } : {};\n}\n\nexport const defaults = {\n  paragraph: props => {\n    const {\n      children\n    } = props;\n    return /*#__PURE__*/React.createElement(Text, {\n      mb: 2,\n      fontSize: \"1.25rem\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 7\n      }\n    }, children);\n  },\n  emphasis: props => {\n    const {\n      children\n    } = props;\n    return /*#__PURE__*/React.createElement(Text, {\n      as: \"em\",\n      fontSize: \"1.25rem\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }\n    }, children);\n  },\n  blockquote: props => {\n    const {\n      children\n    } = props;\n    return /*#__PURE__*/React.createElement(Code, {\n      p: 2,\n      fontSize: \"1.25rem\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }\n    }, children);\n  },\n  code: props => {\n    const {\n      language,\n      value\n    } = props;\n    const className = language && `language-${language}`;\n    return /*#__PURE__*/React.createElement(\"pre\", Object.assign({}, getCoreProps(props), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Code, {\n      p: 2,\n      className: className || null,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }\n    }, value));\n  },\n  delete: props => {\n    const {\n      children\n    } = props;\n    return /*#__PURE__*/React.createElement(Text, {\n      as: \"del\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 12\n      }\n    }, children);\n  },\n  thematicBreak: Divider,\n  link: props => {\n    const {\n      children\n    } = props;\n    return /*#__PURE__*/React.createElement(Link, {\n      href: props.href,\n      isExternal: true,\n      style: {\n        textDecoration: \"none\",\n        color: \"inherit\",\n        outline: \"none\",\n        transition: \"background-color .25s ease-out\",\n        display: \"inline-block\",\n        padding: \"0 1px\",\n        borderBottom: \"0.2em solid #ccc\"\n      },\n      _hover: {\n        backgroundColor: \"#ccc\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }\n    }, children);\n  },\n  img: Image,\n  linkReference: Link,\n  imageReference: Image,\n  text: props => {\n    const {\n      children\n    } = props;\n    return /*#__PURE__*/React.createElement(Text, {\n      as: \"span\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 12\n      }\n    }, children);\n  },\n  list: props => {\n    const {\n      start,\n      ordered,\n      children,\n      depth\n    } = props;\n    const attrs = getCoreProps(props);\n\n    if (start !== null && start !== 1 && start !== undefined) {\n      attrs.start = start.toString();\n    }\n\n    let styleType = \"disc\";\n    if (ordered) styleType = \"decimal\";\n    if (depth === 1) styleType = \"circle\";\n    return /*#__PURE__*/React.createElement(List, Object.assign({\n      spacing: 24,\n      as: ordered ? \"ol\" : \"ul\",\n      styleType: styleType,\n      pl: 4\n    }, attrs, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 7\n      }\n    }), children);\n  },\n  listItem: props => {\n    const {\n      children,\n      checked\n    } = props;\n    let checkbox = null;\n\n    if (checked !== null && checked !== undefined) {\n      checkbox = /*#__PURE__*/React.createElement(Checkbox, {\n        isChecked: checked,\n        isReadOnly: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 9\n        }\n      }, children);\n    }\n\n    return /*#__PURE__*/React.createElement(ListItem, Object.assign({}, getCoreProps(props), {\n      listStyleType: checked !== null ? \"none\" : \"inherit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 7\n      }\n    }), checkbox || children);\n  },\n  definition: () => null,\n  heading: props => {\n    const {\n      level,\n      children\n    } = props;\n    const sizes = [\"xl\", \"lg\", \"md\", \"sm\", \"xs\"];\n    return /*#__PURE__*/React.createElement(Heading, Object.assign({\n      my: 4,\n      fontWeight: \"700\",\n      as: `h${level}`,\n      size: sizes[`${level - 1}`] // fontSize={[\"1.9rem\"]}\n\n    }, getCoreProps(props), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 7\n      }\n    }), children);\n  },\n  inlineCode: props => {\n    const {\n      children\n    } = props;\n    return /*#__PURE__*/React.createElement(Code, Object.assign({}, getCoreProps(props), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 12\n      }\n    }), children);\n  }\n};\n\nfunction ChakraUIRenderer(theme = defaults) {\n  return {\n    paragraph: theme.paragraph,\n    emphasis: theme.emphasis,\n    blockquote: theme.blockquote,\n    code: theme.code,\n    delete: theme.delete,\n    thematicBreak: theme.thematicBreak,\n    link: theme.link,\n    img: theme.img,\n    linkReference: theme.linkReference,\n    imageReference: theme.imageReference,\n    text: theme.text,\n    list: theme.list,\n    listItem: theme.listItem,\n    definition: theme.definition,\n    heading: theme.heading,\n    inlineCode: theme.inlineCode\n  };\n}\n\nexport default ChakraUIRenderer;","map":{"version":3,"sources":["/home/aditya/SemiColon_selenium_tests/project/blog-app/frontend/src/components/pages/Blog/BlogRender.jsx"],"names":["React","Text","Code","Divider","Link","List","Checkbox","ListItem","Heading","Image","getCoreProps","props","defaults","paragraph","children","emphasis","blockquote","code","language","value","className","delete","thematicBreak","link","href","textDecoration","color","outline","transition","display","padding","borderBottom","backgroundColor","img","linkReference","imageReference","text","list","start","ordered","depth","attrs","undefined","toString","styleType","listItem","checked","checkbox","definition","heading","level","sizes","inlineCode","ChakraUIRenderer","theme"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  Text,\n  Code,\n  Divider,\n  Link,\n  List,\n  Checkbox,\n  ListItem,\n  Heading,\n  Image,\n} from \"@chakra-ui/core\";\n\nfunction getCoreProps(props) {\n  return props[\"data-sourcepos\"]\n    ? { \"data-sourcepos\": props[\"data-sourcepos\"] }\n    : {};\n}\n\nexport const defaults = {\n  paragraph: (props) => {\n    const { children } = props;\n    return (\n      <Text mb={2} fontSize=\"1.25rem\">\n        {children}\n      </Text>\n    );\n  },\n  emphasis: (props) => {\n    const { children } = props;\n    return (\n      <Text as=\"em\" fontSize=\"1.25rem\">\n        {children}\n      </Text>\n    );\n  },\n  blockquote: (props) => {\n    const { children } = props;\n    return (\n      <Code p={2} fontSize=\"1.25rem\">\n        {children}\n      </Code>\n    );\n  },\n  code: (props) => {\n    const { language, value } = props;\n    const className = language && `language-${language}`;\n    return (\n      <pre {...getCoreProps(props)}>\n        <Code p={2} className={className || null}>\n          {value}\n        </Code>\n      </pre>\n    );\n  },\n  delete: (props) => {\n    const { children } = props;\n    return <Text as=\"del\">{children}</Text>;\n  },\n  thematicBreak: Divider,\n  link: (props) => {\n    const { children } = props;\n    return (\n      <Link\n        href={props.href}\n        isExternal\n        style={{\n          textDecoration: \"none\",\n          color: \"inherit\",\n          outline: \"none\",\n          transition: \"background-color .25s ease-out\",\n          display: \"inline-block\",\n          padding: \"0 1px\",\n          borderBottom: \"0.2em solid #ccc\",\n        }}\n        _hover={{\n          backgroundColor: \"#ccc\",\n        }}\n      >\n        {children}\n      </Link>\n    );\n  },\n  img: Image,\n  linkReference: Link,\n  imageReference: Image,\n  text: (props) => {\n    const { children } = props;\n    return <Text as=\"span\">{children}</Text>;\n  },\n  list: (props) => {\n    const { start, ordered, children, depth } = props;\n    const attrs = getCoreProps(props);\n    if (start !== null && start !== 1 && start !== undefined) {\n      attrs.start = start.toString();\n    }\n    let styleType = \"disc\";\n    if (ordered) styleType = \"decimal\";\n    if (depth === 1) styleType = \"circle\";\n    return (\n      <List\n        spacing={24}\n        as={ordered ? \"ol\" : \"ul\"}\n        styleType={styleType}\n        pl={4}\n        {...attrs}\n      >\n        {children}\n      </List>\n    );\n  },\n  listItem: (props) => {\n    const { children, checked } = props;\n    let checkbox = null;\n    if (checked !== null && checked !== undefined) {\n      checkbox = (\n        <Checkbox isChecked={checked} isReadOnly>\n          {children}\n        </Checkbox>\n      );\n    }\n    return (\n      <ListItem\n        {...getCoreProps(props)}\n        listStyleType={checked !== null ? \"none\" : \"inherit\"}\n      >\n        {checkbox || children}\n      </ListItem>\n    );\n  },\n  definition: () => null,\n  heading: (props) => {\n    const { level, children } = props;\n    const sizes = [\"xl\", \"lg\", \"md\", \"sm\", \"xs\"];\n\n    return (\n      <Heading\n        my={4}\n        fontWeight=\"700\"\n        as={`h${level}`}\n        size={sizes[`${level - 1}`]}\n        // fontSize={[\"1.9rem\"]}\n        {...getCoreProps(props)}\n      >\n        {children}\n      </Heading>\n    );\n  },\n  inlineCode: (props) => {\n    const { children } = props;\n    return <Code {...getCoreProps(props)}>{children}</Code>;\n  },\n};\n\nfunction ChakraUIRenderer(theme = defaults) {\n  return {\n    paragraph: theme.paragraph,\n    emphasis: theme.emphasis,\n    blockquote: theme.blockquote,\n    code: theme.code,\n    delete: theme.delete,\n    thematicBreak: theme.thematicBreak,\n    link: theme.link,\n    img: theme.img,\n    linkReference: theme.linkReference,\n    imageReference: theme.imageReference,\n    text: theme.text,\n    list: theme.list,\n    listItem: theme.listItem,\n    definition: theme.definition,\n    heading: theme.heading,\n    inlineCode: theme.inlineCode,\n  };\n}\n\nexport default ChakraUIRenderer;\n"]},"metadata":{},"sourceType":"module"}