{"ast":null,"code":"var _jsxFileName = \"/home/aditya/SemiColon_selenium_tests/project/blog-app/frontend/src/App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Route, Link, Switch, Redirect } from \"react-router-dom\";\nimport Home from \"./components/pages/Home/Home.component\";\nimport Blog from \"./components/pages/Blog/Blog.component\";\nimport Blogs from \"./components/pages/Blogs/Blogs.component\";\nimport NewBlog from \"./components/pages/NewBlog/NewBlog.component\";\nimport Login from \"./components/pages/Auth/Login.component\";\nimport Register from \"./components/pages/Auth/Register.component\";\nimport NotFound from \"./components/pages/404/NotFound.component\";\nimport Header from \"./components/common/Header/Header.component\";\nimport AdminPage from \"./components/pages/AdminPage/AdminPage.component\";\nimport EditPage from \"./components/pages/EditPage/EditPage.component\";\nimport axios from \"axios\";\nimport userContext from \"./context/userContext\";\n\nconst App = () => {\n  const [userData, setUserData] = useState({\n    token: undefined,\n    user: undefined,\n    isAdmin: false\n  });\n  useEffect(() => {\n    const checkLoggedIn = async () => {\n      let token = localStorage.getItem(\"x-auth-token\");\n\n      if (token === null) {\n        localStorage.setItem(\"x-auth-token\", \"\");\n        token = \"\";\n      }\n\n      try {\n        const tokenRes = await axios.post(process.env.REACT_APP_BACKEND + \"/user/tokenIsValid\", null, {\n          headers: {\n            \"x-auth-token\": token\n          }\n        });\n\n        if (tokenRes.data) {\n          const userRes = await axios.get(process.env.REACT_APP_BACKEND + \"/user\", {\n            headers: {\n              \"x-auth-token\": token\n            }\n          });\n          setUserData({\n            token,\n            user: userRes.data\n          });\n        }\n      } catch (error) {\n        console.log(\"Not logged in\");\n      }\n    };\n\n    checkLoggedIn();\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(userContext.Provider, {\n    value: {\n      userData,\n      setUserData\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Router, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    path: \"/\",\n    exact: true,\n    component: Home,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/blogs\",\n    exact: true,\n    component: Blogs,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/blogs/:username/:blogID\",\n    render: props => /*#__PURE__*/React.createElement(Blog, Object.assign({}, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 34\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/blogs/new\",\n    exact: true,\n    component: NewBlog,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/blogs/edit\",\n    exact: true,\n    component: EditPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/user/login\",\n    exact: true,\n    component: Login,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/user/register\",\n    exact: true,\n    component: Register,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }), userData.isAdmin ? /*#__PURE__*/React.createElement(Route, {\n    path: \"/user/adminPage\",\n    exact: true,\n    component: AdminPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 15\n    }\n  }) : /*#__PURE__*/React.createElement(Redirect, {\n    to: \"/user/login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    component: NotFound,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  })))));\n};\n\nexport default App;","map":{"version":3,"sources":["/home/aditya/SemiColon_selenium_tests/project/blog-app/frontend/src/App.js"],"names":["React","useState","useEffect","BrowserRouter","Router","Route","Link","Switch","Redirect","Home","Blog","Blogs","NewBlog","Login","Register","NotFound","Header","AdminPage","EditPage","axios","userContext","App","userData","setUserData","token","undefined","user","isAdmin","checkLoggedIn","localStorage","getItem","setItem","tokenRes","post","process","env","REACT_APP_BACKEND","headers","data","userRes","get","error","console","log","props"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Link,\n  Switch,\n  Redirect,\n} from \"react-router-dom\";\nimport Home from \"./components/pages/Home/Home.component\";\nimport Blog from \"./components/pages/Blog/Blog.component\";\nimport Blogs from \"./components/pages/Blogs/Blogs.component\";\nimport NewBlog from \"./components/pages/NewBlog/NewBlog.component\";\nimport Login from \"./components/pages/Auth/Login.component\";\nimport Register from \"./components/pages/Auth/Register.component\";\nimport NotFound from \"./components/pages/404/NotFound.component\";\nimport Header from \"./components/common/Header/Header.component\";\nimport AdminPage from \"./components/pages/AdminPage/AdminPage.component\";\nimport EditPage from \"./components/pages/EditPage/EditPage.component\";\nimport axios from \"axios\";\nimport userContext from \"./context/userContext\";\n\nconst App = () => {\n  const [userData, setUserData] = useState({\n    token: undefined,\n    user: undefined,\n    isAdmin: false,\n  });\n\n  useEffect(() => {\n    const checkLoggedIn = async () => {\n      let token = localStorage.getItem(\"x-auth-token\");\n      if (token === null) {\n        localStorage.setItem(\"x-auth-token\", \"\");\n        token = \"\";\n      }\n      try {\n        const tokenRes = await axios.post(\n          process.env.REACT_APP_BACKEND + \"/user/tokenIsValid\",\n          null,\n          {\n            headers: { \"x-auth-token\": token },\n          }\n        );\n        if (tokenRes.data) {\n          const userRes = await axios.get(\n            process.env.REACT_APP_BACKEND + \"/user\",\n            {\n              headers: { \"x-auth-token\": token },\n            }\n          );\n          setUserData({\n            token,\n            user: userRes.data,\n          });\n        }\n      } catch (error) {\n        console.log(\"Not logged in\");\n      }\n    };\n\n    checkLoggedIn();\n  }, []);\n\n  return (\n    <>\n      <userContext.Provider value={{ userData, setUserData }}>\n        {/* Routing of the app */}\n        <Router>\n          <Header />\n          <Switch>\n            <Route path=\"/\" exact component={Home} />\n            <Route path=\"/blogs\" exact component={Blogs} />\n            <Route\n              exact\n              path=\"/blogs/:username/:blogID\"\n              render={(props) => <Blog {...props} />}\n            ></Route>\n            <Route path=\"/blogs/new\" exact component={NewBlog} />\n            <Route path=\"/blogs/edit\" exact component={EditPage}></Route>\n            <Route path=\"/user/login\" exact component={Login} />\n            <Route path=\"/user/register\" exact component={Register} />\n            {userData.isAdmin ? (\n              <Route path=\"/user/adminPage\" exact component={AdminPage} />\n            ) : (\n              <Redirect to=\"/user/login\" />\n            )}\n            <Route component={NotFound} />\n          </Switch>\n        </Router>\n      </userContext.Provider>\n    </>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}